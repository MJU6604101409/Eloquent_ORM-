import React, { useState } from 'react';
import { Head, useForm, Link } from '@inertiajs/react';
import { ChevronLeftIcon, ChevronRightIcon } from "@heroicons/react/20/solid";


export default function Index({ bookings }) {
    const { delete: destroy } = useForm();

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ & ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤
    const [search, setSearch] = useState('');
    const [currentPage, setCurrentPage] = useState(1);
    const itemsPerPage = 10; // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏∞ 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£

    const getStatusColor = (status) => {
        const colors = {
            'confirmed': 'bg-blue-100 text-blue-800 border border-blue-300',
            'checked_in': 'bg-green-100 text-green-800 border border-green-300',
            'checked_out': 'bg-gray-100 text-gray-800 border border-gray-300'
        };
        return colors[status] || 'bg-gray-100 text-gray-800 border border-gray-300';
    };

    const handleDelete = (booking) => {
        if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ?')) {
            destroy(route('bookings.destroy', booking.id));
        }
    };

    // ‚úÖ ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    const filteredBookings = bookings.filter((booking) =>
        booking.room?.number.includes(search) || booking.customer?.name.includes(search)
    );

    // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    const totalPages = Math.ceil(filteredBookings.length / itemsPerPage);
    const paginatedBookings = filteredBookings.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);

    return (
        <>
            <Head title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å" />

            <div className="container mx-auto p-6">
                {/* Header */}
                <div className="flex flex-col sm:flex-row justify-between items-center mb-6">
                    <h1 className="text-3xl font-extrabold text-gray-800">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å</h1>
                    <Link
                        href={route('bookings.create')}
                        className="mt-4 sm:mt-0 bg-blue-600 text-white px-5 py-2 rounded-lg shadow-md hover:bg-blue-700 transition"
                    >
                        ‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                    </Link>
                </div>

                {/* ‚úÖ ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
                <div className="mb-4">
                    <input
                        type="text"
                        value={search}
                        onChange={(e) => setSearch(e.target.value)}
                        placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"
                        className="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                    />
                </div>

                {/* Table */}
                <div className="bg-white rounded-xl shadow-lg overflow-hidden">
                    <table className="min-w-full border-collapse">
                        <thead className="bg-blue-50 text-gray-600 uppercase text-sm font-semibold">
                            <tr>
                                {['‡∏´‡πâ‡∏≠‡∏á', '‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á', '‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô', '‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå', '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£'].map((header, index) => (
                                    <th key={index} className="px-6 py-3 text-left border-b">{header}</th>
                                ))}
                            </tr>
                        </thead>
                        <tbody className="divide-y divide-gray-200">
                            {paginatedBookings.length > 0 ? (
                                paginatedBookings.map((booking) => (
                                    <tr key={booking.id} className="hover:bg-gray-50 transition">
                                        {/* ‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å */}
                                        <td className="px-6 py-4">
                                            {booking.room ? (
                                                <>
                                                    <span className="font-medium text-gray-900">{booking.room?.number}</span>
                                                    <div className="text-gray-500 text-sm">{booking.room?.type}</div>
                                                </>
                                            ) : (
                                                <span className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á</span>
                                            )}
                                        </td>

                                        {/* ‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á */}
                                        <td className="px-6 py-4">
                                            {booking.customer ? (
                                                <>
                                                    <span className="font-medium text-gray-900">{booking.customer?.name}</span>
                                                    <div className="text-gray-500 text-sm">{booking.customer?.phone}</div>
                                                </>
                                            ) : (
                                                <span className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</span>
                                            )}
                                        </td>

                                        {/* ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô & ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå */}
                                        <td className="px-6 py-4 text-gray-600">{booking.check_in_date || '-'}</td>
                                        <td className="px-6 py-4 text-gray-600">{booking.check_out_date || '-'}</td>

                                        {/* ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° */}
                                        <td className="px-6 py-4 font-semibold text-gray-900">
                                            ‡∏ø{booking.total_price ? booking.total_price.toLocaleString() : '0'}
                                        </td>

                                        {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
                                        <td className="px-6 py-4">
                                            <span className={`px-3 py-1 text-xs rounded-full ${getStatusColor(booking.status)}`}>
                                                {booking.status}
                                            </span>
                                        </td>

                                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
                                        <td className="px-6 py-4">
                                            <div className="flex space-x-3">
                                                <Link
                                                    href={route('bookings.show', booking.id)}
                                                    className="text-blue-500 hover:text-blue-700"
                                                >
                                                    üîç ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                                                </Link>
                                                <Link
                                                    href={route('bookings.edit', booking.id)}
                                                    className="text-green-500 hover:text-green-700"
                                                >
                                                    ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                                </Link>
                                                <button
                                                    onClick={() => handleDelete(booking)}
                                                    className="text-red-500 hover:text-red-700"
                                                >
                                                    ‚ùå ‡∏•‡∏ö‡∏ó‡∏¥‡πâ‡∏á
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                ))
                            ) : (
                                <tr>
                                    <td colSpan="7" className="text-center py-6 text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</td>
                                </tr>
                            )}
                        </tbody>
                    </table>
                </div>



                {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (Pagination) */}
                <div className="flex justify-center items-center mt-6 space-x-2">
                    {/* üîπ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
                    <button
                        onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}
                        disabled={currentPage === 1}
                        className={`flex items-center px-3 py-2 rounded-md transition ${
                            currentPage === 1 ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-500 text-white hover:bg-blue-600'
                        }`}
                    >
                        <ChevronLeftIcon className="w-5 h-5" />
                    </button>

                    {/* üîπ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤ */}
                    {[...Array(totalPages)].map((_, index) => (
                        <button
                            key={index}
                            onClick={() => setCurrentPage(index + 1)}
                            className={`px-4 py-2 rounded-md font-medium transition ${
                                currentPage === index + 1
                                    ? 'bg-blue-600 text-white shadow-md'
                                    : 'bg-gray-100 text-gray-700 hover:bg-blue-500 hover:text-white'
                            }`}
                        >
                            {index + 1}
                        </button>
                    ))}

                    {/* üîπ ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏ï‡πà‡∏≠ */}
                    <button
                        onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}
                        disabled={currentPage === totalPages}
                        className={`flex items-center px-3 py-2 rounded-md transition ${
                            currentPage === totalPages ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-500 text-white hover:bg-blue-600'
                        }`}
                    >
                        <ChevronRightIcon className="w-5 h-5" />
                    </button>
                </div>

            </div>
        </>
    );
}
